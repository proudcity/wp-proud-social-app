!function($){"use strict";
//***************************************
// Main Application
//***************************************
angular.module("socialAppParent",["socialApp","angular-inview","angular-lazycompile"]),angular.module("socialApp",[
// 'iso.directives',
"ngResource","ngSanitize","dynamicLayout","readMore"]).run(["$rootScope","$window",function($rootScope,$window){$rootScope.socialApi=_.get(Proud,"settings.proud_social_app.socialApi")||"https://feeds.proudcity.com/api/";var user=_.get(Proud,"settings.global.location.city")||"";user&&(user+=", "+_.get(Proud,"settings.global.location.state")||"",user=user.replace(/ /g,"_")),$rootScope.socialUser=user||"West_Carrollton,_Ohio"}]).factory("SocialFeed",["$resource","$rootScope",function($resource,$rootScope){var baseUrl=$rootScope.socialApi+"/"+$rootScope.socialUser+"/feed";return{getFeed:function(){return $resource(baseUrl,{format:"json",action:"query",callback:"JSON_CALLBACK"},{query:{cache:!0,method:"GET",isArray:!0}})},getCustomFeed:function(accounts){return $resource(baseUrl+"/accounts/"+accounts,{format:"json",action:"query",callback:"JSON_CALLBACK"},{query:{cache:!0,method:"GET",isArray:!0}})}}}]).filter("parseSocialText",function(){var urlPattern=/(http|ftp|https):\/\/[\w-]+(\.[\w-]+)+([\w.,@?^=%&amp;:\/~+#-]*[\w@?^=%&amp;\/~+#-])?/gi,hashPattern=/(^|\s)#(\w*[a-zA-Z_]+\w*)/gim,mentionPattern=/(^|\s)\@(\w*[a-zA-Z_]+\w*)/gim;return function(text,target,service){var replacedText=text?text.replace(urlPattern,'<a target="'+target+'" href="$&">$&</a>'):text;
// replace #hashtags and send them to twitter
return replacedText&&("twitter"===service?(replacedText=replacedText.replace(hashPattern,'$1<a class="hashtag" href="https://twitter.com/search?q=%23$2" target="'+target+'">#$2</a>'),replacedText=replacedText.replace(mentionPattern,'$1<a class="hashtag" href="https://twitter.com/$2" target="'+target+'">@$2</a>')):"instagram"===service?(replacedText=replacedText.replace(hashPattern,'$1<a class="hashtag" href="https://instagram.com/explore/tags/$2" target="'+target+'">#$2</a>'),replacedText=replacedText.replace(mentionPattern,'$1<a class="hashtag" href="https://instagram.com/$2" target="'+target+'">@$2</a>')):"facebook"===service&&(replacedText=replacedText.replace(hashPattern,'$1<a class="hashtag" href="https://facebook.com/hashtag/$2" target="'+target+'">#$2</a>'))),replacedText}}).controller("SocialController",["$scope","SocialFeed","$filter","$sce","$rootScope","$timeout",function($scope,SocialFeed,$filter,$sce,$rootScope,$timeout){var self=this;$scope.inited=!1;
// Get app settings
_.get(Proud,"settings.proud_social_app.instances."+$rootScope.appId);
// Make defaults
self.appServices={facebook:{name:"Facebook",icon:"fa-facebook-square"},twitter:{name:"Twitter",icon:"fa-twitter-square"},youtube:{name:"Youtube",icon:"fa-youtube-play"},instagram:{name:"Instagram",icon:"fa-instagram"},ical:{name:"iCal",icon:"fa-calendar"},rss:{name:"RSS Feed",icon:"fa-rss"}},
// Inits vars with directives
$scope.initVars=function($attributes){
// We have custom account settings
if($attributes.socialAccountsCustom){var accounts=encodeURIComponent(_.values($scope.$eval($attributes.socialAccountsCustom)).join());self.userFeed=SocialFeed.getCustomFeed(accounts)}else{
// We have services settings ?
var services=$scope.$eval($attributes.socialActiveServices);
// reduce master list
_.isArray(services)&&(self.appServices=_.pick(self.appServices,function(service,key){return _.contains($attributes.socialActiveServices,key)}))}
// Default feed
self.userFeed||(self.userFeed=SocialFeed.getFeed()),
// Get other options
$scope.socialPostCount=$attributes.socialPostCount||20,$scope.socialHideControls=$attributes.socialHideControls||!1,$scope.socialStaticCols=$attributes.socialStaticCols||3,self.preSort=!0,$scope.activeServices="all"},
// Applies a active flag to services 
// that are present in inital query
self.applyActiveServices=function(data){
// Init holder vars
var active=[];
// Find services in result
_.map(data,function(item,key){active=_.union(active,[item.service])}),
// Run through appServices, 
_.map(self.appServices,function(service,key){_.contains(active,key)&&(self.appServices[key].active=!0)}),$scope.services=self.appServices},
// Runs through and processes images once they are loaded
self.calculateAspectRatios=function(social,callback){
// Checks if we're still in the queue
function imagesChecker(key){delete imageCount[key],
// Finished with images
_.size(imageCount)||callback(social)}var imageCount={};_.map(social,function(item,key){if(
// Add template file
social[key].template="views/apps/socialApp/default-card-style.html",
// Adding to queue
imageCount[key]=!0,item.image){
// Create new offscreen image to test
var theImage=new Image;theImage.src=item.image,
// Allow for errors
theImage.onerror=function(){imagesChecker(key)},
// Get accurate measurements from that.
theImage.addEventListener("load",function(){this.naturalWidth>=this.naturalHeight?social[key].styleAttr=this.naturalHeight/this.naturalWidth*100:(social[key].styleAttr=100,social[key].imgStyleAttr=(this.naturalHeight/this.naturalWidth*100-100)/3),imagesChecker(key)},!0)}else setTimeout(function(){imagesChecker(key)},1)})},
// Calls feed with parameter
self.serviceFeed=function(service,limit,callback){var params={"services[]":"all"==$scope.activeServices?_.keys(self.appServices):$scope.activeServices,limit:limit};self.userFeed.query(params,function(data){
// First time through, find available services
$scope.inited||self.applyActiveServices(data),
// Sort / limit data
data=_.slice(self.preSort?_.chain(data).sortBy("date").reverse().value():data,0,limit),
// Load our images, calculate ratios
self.calculateAspectRatios(data,function(){$scope.inited=!0,callback(data)})})},
// Toggle social source
$scope.switchService=function(event,service,limit,callback){
// First reset
$scope.social=[],
// init default callback
callback=callback||function(){},event&&event.preventDefault();var isActive=$scope.isServiceActive(service),runQuery=!1,callback=callback||function(){},limit=limit||$scope.socialPostCount;
// switch active
$scope.inited&&!isActive&&($scope.activeServices=service,runQuery=!0),
// Run the query
!runQuery&&$scope.inited||self.serviceFeed(service,limit,function(data){callback(),
// Set data after exiting digest loop
$timeout(function(){$scope.social=data})})},
// We pre-sorting?
$scope.setPreSort=function(sort){self.preSort=sort},
// Is tab active service?
$scope.isServiceActive=function(service){return $scope.activeServices==service},
// Should the tab appear?
$scope.showServiceTab=function(service){return $scope.services[service].active},
// Sorts by recent
$scope.recent=function(){$timeout(function(){$scope.container.isotope({sortBy:"date"})})},
// Shuffles order
$scope.shuffle=function(){$timeout(function(){$scope.$emit("iso-method",{name:"shuffle",params:null})})},
// Returns date time in proper format;
$scope.getPublishedDate=function(date){return new Date(date).getTime()},$scope.getAccountUrl=function(item){switch(item.service){case"facebook":return"https://www.facebook.com/"+item.account;case"twitter":return"https://twitter.com/"+item.account;case"youtube":return"https://www.youtube.com/user/"+item.account;case"instagram":return"https://www.instagram.com/"+item.account}},$scope.getAccountTitle=function(item){
// If facebook and the account doesn't have a clean URL
// If facebook and the account doesn't have a clean URL
return"facebook"==item.service&&item.account&&!isNaN(item.account)?item.agencyName:item.match},
// Gets post URL from item
$scope.getPostUrl=function(item){switch(item.service){case"facebook":var url="http://facebook.com/"+item.account;return item.id?url+"/posts/"+item.id.substring(item.id.indexOf("_")+1):url;default:return item.url}},$scope.toSafe=function(text,service){return $sce.trustAsHtml($filter("parseSocialText")(text,"_blank",service))}}]).directive("socialWall",function($window,$rootScope,$browser,$http,$timeout){return{restrict:"A",controller:"SocialController",templateUrl:"views/apps/socialApp/social.html",link:function($scope,$element,$attributes){
// Init vars
$scope.initVars($attributes),$scope.setPreSort(!0),
// call init
$scope.inited||$scope.switchService(null,null,$scope.socialPostCount),$scope.toggleText=function(){$timeout(function(){$rootScope.$broadcast("dynamicLayout.layout")})}}}}).directive("socialStatic",function($window,$browser,$http,$timeout){return{restrict:"A",controller:"SocialController",templateUrl:"views/apps/socialApp/social-static.html",link:function($scope,$element,$attributes){
// Init vars
$scope.initVars($attributes);var columnClasses="card-columns-xs-1";$scope.socialStaticCols>1&&(columnClasses+=" card-columns-sm-2"),$scope.socialStaticCols>2&&(columnClasses+=" card-columns-md-3"),$scope.socialStaticCols>3&&(columnClasses+=" card-columns-lg-"+$scope.socialStaticCols),$scope.columnClasses=columnClasses,$scope.setPreSort(!0),
// call init
$scope.inited||$scope.switchService(null,null,$scope.socialPostCount),
// Watch social
$scope.$watch("social",function(value){$scope.social&&console.log("ok")})}}}).directive("socialTimeline",function($window,$browser,$http,$timeout){return{restrict:"A",controller:"SocialController",templateUrl:"views/apps/socialApp/social-timeline.html",link:function($scope,$element,$attributes){
// Init vars
$scope.initVars($attributes),
// so we can switch right/left ordering on tab change
$scope.oddEvenSwitch=0,$scope.timelineSwitchService=function(event,service){$scope.switchService(event,service,$scope.socialPostCount,function(){$scope.oddEvenSwitch=$scope.oddEvenSwitch?0:1})},
// call init
$scope.inited||$scope.switchService(null,null,$scope.socialPostCount)}}})}(jQuery);